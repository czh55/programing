<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.programing.dao.ApplicationMapper" >
  <resultMap id="BaseResultMap" type="com.programing.pojo.Application" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="application_no" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="sponsor_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="payment" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="payment_type" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="payment_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="end_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="close_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, application_no, user_id, sponsor_id, payment, payment_type,status, payment_time,
    end_time, close_time, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from programing_application
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from programing_application
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.programing.pojo.Application" >
    insert into programing_application (id, application_no, user_id, sponsor_id,
    payment, payment_type,
    status, payment_time,
    end_time, close_time,
    create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{applicationNo,jdbcType=BIGINT}, #{userId,jdbcType=INTEGER}, #{sponsorId,jdbcType=INTEGER},
    #{payment,jdbcType=DECIMAL}, #{paymentType,jdbcType=INTEGER},
    #{status,jdbcType=INTEGER}, #{paymentTime,jdbcType=TIMESTAMP},
    #{sendTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{closeTime,jdbcType=TIMESTAMP},
    now(), now())
  </insert>
  <insert id="insertSelective" parameterType="com.programing.pojo.Application" >
    insert into programing_application
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="applicationNo != null" >
        application_no,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="sponsorId != null" >
        sponsor_id,
      </if>
      <if test="payment != null" >
        payment,
      </if>
      <if test="paymentType != null" >
        payment_type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="paymentTime != null" >
        payment_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="closeTime != null" >
        close_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="applicationNo != null" >
        #{applicationNo,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="payment != null" >
        #{payment,jdbcType=DECIMAL},
      </if>
      <if test="paymentType != null" >
        #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null" >
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendTime != null" >
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="closeTime != null" >
        #{closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        now(),
      </if>
      <if test="updateTime != null" >
        now(),
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.programing.pojo.Application" >
    update programing_application
    <set >
      <if test="applicationNo != null" >
        application_no = #{applicationNo,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="sponsorId != null" >
        sponsor_id = #{sponsorId,jdbcType=INTEGER},
      </if>
      <if test="payment != null" >
        payment = #{payment,jdbcType=DECIMAL},
      </if>
      <if test="paymentType != null" >
        payment_type = #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null" >
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="closeTime != null" >
        close_time = #{closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = now(),
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.programing.pojo.Application" >
    update programing_application
    set application_no = #{applicationNo,jdbcType=BIGINT},
    user_id = #{userId,jdbcType=INTEGER},
    sponsor_id = #{sponsorId,jdbcType=INTEGER},
    payment = #{payment,jdbcType=DECIMAL},
    payment_type = #{paymentType,jdbcType=INTEGER},
    status = #{status,jdbcType=INTEGER},
    payment_time = #{paymentTime,jdbcType=TIMESTAMP},
    end_time = #{endTime,jdbcType=TIMESTAMP},
    close_time = #{closeTime,jdbcType=TIMESTAMP},
    create_time = #{createTime,jdbcType=TIMESTAMP},
    update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="selectByUserIdAndApplicationNo" resultMap="BaseResultMap" parameterType="map">
    SELECT
    <include refid="Base_Column_List"></include>
    from programing_application
    where application_no = #{applicationNo}
    and user_id = #{userId}
  </select>


  <select id="selectByApplicationNo" resultMap="BaseResultMap" parameterType="long">
    SELECT
    <include refid="Base_Column_List">
    </include>
    FROM  programing_application
    where application_no = #{applicationNo}
  </select>

  <select id="selectByApplicationNoAndSponsorId" resultMap="BaseResultMap" parameterType="map">
    SELECT
    <include refid="Base_Column_List">
    </include>
    FROM  programing_application
    <where>
      <if test="sponsorId != 1">
        and sponsor_id = #{sponsorId}
      </if>
      <if test="applicationNo != null">
        and application_no = #{applicationNo}
      </if>
    </where>
  </select>

  <select id="selectBySponsorId" resultMap="BaseResultMap" parameterType="int">
    SELECT
    <include refid="Base_Column_List">
    </include>
    FROM  programing_application
    <where>
      <if test="sponsorId != 1">
        and sponsor_id = #{sponsorId}
      </if>
    </where>
    order by create_time desc
  </select>



  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="int">
    SELECT
    <include refid="Base_Column_List"/>
    from programing_application
    where user_id = #{userId}
    order by create_time desc
  </select>



  <select id="selectAllApplication" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    from programing_application
    ORDER BY  create_time desc
  </select>

  <select id="selectApplicationStatusByCreateTime" resultMap="BaseResultMap" parameterType="map">
    SELECT
    <include refid="Base_Column_List"/>
    from programing_application
    where status = #{status}
    <![CDATA[
    and create_time <= #{date}
    ]]>
    order by create_time desc
  </select>

  <update id="closeApplicationByApplicationId" parameterType="int" >
    UPDATE programing_application
    SET status = 0
    where id = #{id}
  </update>












</mapper>